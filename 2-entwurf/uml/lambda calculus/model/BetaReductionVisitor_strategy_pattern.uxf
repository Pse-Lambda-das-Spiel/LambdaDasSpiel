<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.1">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>500</y>
      <w>260</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>BetaReductionVisitor
--
-strategy: ReductionStrategy
-result: LambdaTerm = null
-hasReduced: boolean = false
--
+BetaReductionVisitor(strategy: 
    ReductionStrategy)
+visit(node: LambdaApplication)
+visit(node: LambdaAbstraction)
+visit(node: LambdaVariable)
+getResult(): LambdaTerm</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLInterface</id>
    <coordinates>
      <x>0</x>
      <y>500</y>
      <w>180</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>LambdaTermVisitor&lt;T&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>90</x>
      <y>500</y>
      <w>230</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-
&lt;&lt;bind&gt;&gt;
T -&gt; LambdaTerm</panel_attributes>
    <additional_attributes>10.0;20.0;210.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>630</y>
      <w>290</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;80.0;270.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>810</x>
      <y>710</y>
      <w>340</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>if (!hasReduced) {
    result = strategy.reduceAbstraction(node);
} else {
    result = node;
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>630</x>
      <y>490</y>
      <w>560</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>if (hasReduced) {
    result = node;
} else {
    if (node.getFirst().isAbstraction()) {
        LambdaAbstraction abstraction = ((LambdaAbstraction) node.getFirst());
        result = strategy.reduceApplication(node);
        hasReduced = true;
    } else {
        node.setFirst(node.getFirst().accept(this));
        node.setSecond(node.getSecond().accept(this));
    }
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>530</x>
      <y>750</y>
      <w>240</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>result = strategy.reduceVariable(node);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>640</y>
      <w>30</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>260</x>
      <y>170</y>
      <w>380</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>/ReductionStrategy/
--
--
+reduceApplication(node: LambdaAbstraction):
   LambdaTerm
+reduceAbstraction(node: LambdaAbstraction): 
   LambdaAbstraction 
+reduceVariable(node:LambdaVariable):
   LambdaVariable
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>740</x>
      <y>40</y>
      <w>370</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>StrategyNormalOrder
--
--
+reduceApplication(node: LambdaAbstraction): 
   LambdaTerm
+reduceAbstraction(node: LambdaAbstraction): 
    LambdaAbstraction </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>740</x>
      <y>150</y>
      <w>370</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>StrategyApplicativeOrder
--
--
+reduceApplication(node: LambdaAbstraction): 
   LambdaTerm
+reduceAbstraction(node: LambdaAbstraction): 
   LambdaAbstraction </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>350</x>
      <y>350</y>
      <w>370</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>StrategyCallByName
--
--
+reduceApplication(node: LambdaAbstraction): 
   LambdaTerm</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>740</x>
      <y>350</y>
      <w>360</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>StrategyCallByValue
--
--
+reduceApplication(node: LambdaAbstraction): 
   LambdaTerm</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>270</x>
      <y>120</y>
      <w>120</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>return node;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>300</y>
      <w>30</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;200.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>300</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>280</y>
      <w>170</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0;150.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>210</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>110</y>
      <w>150</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>340</x>
      <y>10</y>
      <w>340</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>return (abstraction.getInside().accept(
new ApplicationVisitor(abstraction.getColor(),
node.getSecond())));</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>990</x>
      <y>270</y>
      <w>240</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>node.setInside(node.getInside().accept(this));
return node;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>380</x>
      <y>120</y>
      <w>250</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=-()

</panel_attributes>
    <additional_attributes>10.0;20.0;230.0;20.0;230.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>670</x>
      <y>10</y>
      <w>440</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=-()

</panel_attributes>
    <additional_attributes>10.0;20.0;420.0;20.0;420.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1080</x>
      <y>110</y>
      <w>160</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=-()

</panel_attributes>
    <additional_attributes>90.0;160.0;90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>600</y>
      <w>110</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-()

</panel_attributes>
    <additional_attributes>90.0;20.0;10.0;20.0</additional_attributes>
  </element>
</diagram>
