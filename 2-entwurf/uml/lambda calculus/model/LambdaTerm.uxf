<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>20</y>
      <w>350</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
LambdaTermObserver
--
--
+replaceTerm(old: LambdaTerm, new: LambdaTerm)
+setColor(term: LambdaTerm, color: Color)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>190</y>
      <w>280</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>/LambdaTerm/
--
-parent: LambdaTerm
--
+accept(visitor: LambdaTermVisitor):
    LambdaTerm
+notify(notifier: Consumer&lt;Observer&gt;)
+isRoot(): boolean
+isAbstraction(): boolean
+isValue(): boolean
+getParent(): LambdaTerm</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>430</x>
      <y>440</y>
      <w>240</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>LambdaApplication
--
-first: LambdaTerm = null
-second: LambdaTerm = null
--
+accept(visitor: LambdaTermVisitor):
    LambdaTerm
+setFirst(term: LambdaTerm)
+getFirst(): LambdaTerm
+setSecond(term: LambdaTerm)
+getSecond(): LambdaTerm</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>700</x>
      <y>440</y>
      <w>280</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>LambdaValue
--
-color: Color
--
+setColor(color: Color)
+getColor(): Color
+isValue(): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>620</x>
      <y>700</y>
      <w>250</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>LambdaAbstraction
--
-inside: LambdaTerm = null
--
+accept(visitor: LambdaTermVisitor):
    LambdaTerm
+setInside(inside: LambdaTerm)
+getInside(): LambdaTerm
+isAbstraction(): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>700</y>
      <w>240</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>LambdaVariable
--
--
+accept(visitor: LambdaTermVisitor):
    LambdaTerm</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>710</x>
      <y>180</y>
      <w>290</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-
&lt;&lt;bind&gt;&gt;
Observer -&gt; LambdaTermObserver</panel_attributes>
    <additional_attributes>10.0;20.0;270.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>510</x>
      <y>360</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>580</x>
      <y>360</y>
      <w>210</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;80.0;190.0;40.0;10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>530</y>
      <w>30</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;170.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>940</x>
      <y>530</y>
      <w>30</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;170.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>980</x>
      <y>170</y>
      <w>210</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>template=Observer: Class
Observable
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>190</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
LambdaTermVisitor
--
--
+visit(node: LambdaApplication)
+visit(node: LambdaAbstraction)
+visit(node: LambdaVariable)
+getResult(): LambdaTerm</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>580</x>
      <y>630</y>
      <w>170</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>visitor.visit(this);
return visitor.getResult();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>690</x>
      <y>260</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;20.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>790</x>
      <y>260</y>
      <w>160</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>if (isRoot()) {
    super.notify(notifier);
} else {
    parent.notify(notifier);
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>310</x>
      <y>240</y>
      <w>150</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;130.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>570</x>
      <y>110</y>
      <w>70</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>30.0;10.0;30.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>830</x>
      <y>780</y>
      <w>60</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>620</x>
      <y>850</y>
      <w>390</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>if (this.inside != inside) {
    notify((observer) -&gt; observer.replaceNode(inside, result));
    this.inside = inside;
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>650</x>
      <y>510</y>
      <w>60</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>250</x>
      <y>290</y>
      <w>40</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>210</x>
      <y>360</y>
      <w>210</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>default implementation: empty</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
