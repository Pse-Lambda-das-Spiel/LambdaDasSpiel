<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>430</x>
      <y>280</y>
      <w>320</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>ViewInsertionVisitor
--
-inserted: LambdaTerm
-view: LambdaTermView
-rightSibling: LambdaTerm = null
-lastVisited: LambdaTerm
-isSecondApplicationChild: boolean = false
--
+ViewInsertionVisitor(inserted: LambdaTerm,
    view: LambdaTermViewController)
+visit(node: LambdaRoot)
+visit(node: LambdaApplication)
+visit(node: LambdaAbstraction)
+visit(node: LambdaVariable)
-insertChild(parent: LambdaNodeView)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>810</x>
      <y>540</y>
      <w>780</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>parent.insertChild(inserted.accept(new NodeViewCreator(parent, canCreateApplicationNodeView, view)), rightSibling);
inserted.accept(new InsertionRecursionVisitor(view));
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>490</y>
      <w>150</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>390</y>
      <w>190</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;60.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>810</x>
      <y>210</y>
      <w>490</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>if (rightSibling == null &amp;&amp; lastVisited == node.getFirstChild()) {
    rightSibling = node.getSecondChild();
}
if (inserted == node.getSecondChild()) { // Parenthesis
    isSecondApplicationChild = true;
}
if (view.hasNodeView(node))
    insertChild(view.getActor(node));
} else {
    lastVisited = node;
    node.getParent().accept(this);
}
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>620</x>
      <y>470</y>
      <w>210</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>810</x>
      <y>500</y>
      <w>120</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>assert(false);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>430</x>
      <y>590</y>
      <w>320</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>NodeViewCreator
--
-result: LambdaNodeView = null
-parent: LambdaNodeView
-view: LambdaTermView
-canCreateApplicationNodeView: boolean
--
+NodeViewCreator(parent: LambdaNodeView,
    canCreateApplicationNodeView: boolean,
    view: LambdaTermView)
+visit(node: LambdaRoot)
+visit(node: LambdaApplication)
+visit(node: LambdaAbstraction)
+visit(node: LambdaVariable)
+getResult(): LambdaNodeView</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>750</y>
      <w>200</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>820</x>
      <y>720</y>
      <w>410</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>if (canCreateApplicationNodeView) {
    result = new LambdaParenthesisView(node, parent, view);
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>810</x>
      <y>460</y>
      <w>230</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>insertChild(view.getActor(node));</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>460</y>
      <w>190</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>810</x>
      <y>150</y>
      <w>180</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>...
lastVisited = inserted;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>160</y>
      <w>110</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;240.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>430</x>
      <y>840</y>
      <w>340</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>InsertionRecursionVisitor
--
-view: LambdaTermView
--
+InsertionRecursionVisitor(view: LambdaTermView)
+visit(node: LambdaRoot)
+visit(node: LambdaApplication)
+visit(node: LambdaAbstraction)
+visit(node: LambdaVariable)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>920</y>
      <w>180</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>800</x>
      <y>910</y>
      <w>520</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>if (node.getFirstChild() != null) {
    node.accept(new InsertionVisitor(node.getFirstChild(), view));
}
if (node.getSecondChild() != null) {
    node.accept(new InsertionVisitor(node.getSecondChild(), view));
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLInterface</id>
    <coordinates>
      <x>70</x>
      <y>270</y>
      <w>160</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>LambdaTermVisitor&lt;T&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>270</y>
      <w>300</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-
&lt;&lt;bind&gt;&gt;
T -&gt; Object</panel_attributes>
    <additional_attributes>10.0;20.0;280.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLInterface</id>
    <coordinates>
      <x>70</x>
      <y>580</y>
      <w>160</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>LambdaTermVisitor&lt;T&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>580</y>
      <w>300</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-
&lt;&lt;bind&gt;&gt;
T -&gt; LambdaNodeView</panel_attributes>
    <additional_attributes>10.0;20.0;280.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>830</y>
      <w>300</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-
&lt;&lt;bind&gt;&gt;
T -&gt; Object</panel_attributes>
    <additional_attributes>10.0;20.0;280.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLInterface</id>
    <coordinates>
      <x>70</x>
      <y>830</y>
      <w>160</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>LambdaTermVisitor&lt;T&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>420</y>
      <w>230</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>820</x>
      <y>680</y>
      <w>120</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>assert(false);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>680</y>
      <w>240</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;60.0;220.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>870</y>
      <w>220</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;40.0;200.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>800</x>
      <y>870</y>
      <w>120</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>assert(false);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>540</x>
      <y>150</y>
      <w>180</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>First node visited must be the inserted element's parent.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>200</y>
      <w>50</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;80.0</additional_attributes>
  </element>
</diagram>
