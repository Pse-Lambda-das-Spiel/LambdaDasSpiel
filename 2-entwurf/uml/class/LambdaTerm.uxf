<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>40</y>
      <w>350</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
LambdaTermObserver
--
--
+removeNode(node: LambdaTerm)
+addNode(node: LambdaTerm)
+replaceNode(old: LambdaTerm, new: LambdaTerm)
+setColor(node: LambdaTerm, color: Color)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>300</y>
      <w>280</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>/LambdaTerm/
--
--
+accept(visitor: LambdaTermVisitor):
    LambdaTerm
+notify(notifier: Consumer&lt;Observer&gt;)
isRoot(): boolean
isAbstraction(): boolean
isValue(): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>470</x>
      <y>550</y>
      <w>240</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>LambdaApplication
--
first: LambdaTerm
second: LambdaTerm
--
setFirst(term: LambdaTerm)
getFirst(): LambdaTerm
setSecond(term: LambdaTerm)
getSecond(): LambdaTerm</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>740</x>
      <y>550</y>
      <w>280</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>LambdaValue
--
-color: Color
--
setColor(color: Color)
getColor(): Color
isValue(): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>660</x>
      <y>700</y>
      <w>220</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>LambdaAbstraction
--
inside: LambdaTerm
--
setInside(inside: LambdaTerm)
getInside(): LambdaTerm
isAbstraction(): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>890</x>
      <y>700</y>
      <w>190</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>LambdaVariable
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>750</x>
      <y>290</y>
      <w>290</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-
&lt;&lt;bind&gt;&gt;
Observer -&gt; LambdaTermObserver</panel_attributes>
    <additional_attributes>10.0;20.0;270.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>460</y>
      <w>30</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>620</x>
      <y>460</y>
      <w>210</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;90.0;190.0;30.0;10.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>820</x>
      <y>640</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>950</x>
      <y>640</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1020</x>
      <y>280</y>
      <w>210</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>template=Observer: Class
Observable
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>300</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
LambdaTermVisitor
--
--
visit(node: LambdaApplication)
visit(node: LambdaAbstraction)
visit(node: LambdaVariable)
getResult(): LambdaTerm</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>330</y>
      <w>130</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>830</x>
      <y>370</y>
      <w>170</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>visitor.visit(this);
return visitor.getResult();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>730</x>
      <y>360</y>
      <w>120</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>830</x>
      <y>420</y>
      <w>160</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>if (isRoot()) {
    super.notify(notifier);
} else {
    parent.notify(notifier);
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>350</y>
      <w>150</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;130.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>220</y>
      <w>70</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>30.0;10.0;30.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>860</x>
      <y>750</y>
      <w>80</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>670</x>
      <y>810</y>
      <w>390</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>if (this.inside != inside) {
    notify((observer) -&gt; observer.replaceNode(inside, result));
    this.inside = inside;
}</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
