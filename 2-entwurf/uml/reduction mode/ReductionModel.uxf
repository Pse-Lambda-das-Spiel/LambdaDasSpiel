<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.0">
  <help_text>

// Uncomment the following line to change the fontsize and font:
// fontsize=14
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>410</x>
      <y>360</y>
      <w>450</w>
      <h>340</h>
    </coordinates>
    <panel_attributes>ReductionModel
--
-history: Stack&lt;LambdaRoot&gt;
-paused: boolean = true
-pauseRequested: boolean = false
-strategy: BetaReductionVisitor
-current: LambdaRoot
-step: int = 0
-busy: boolean = false
-level: LevelModel
--
+ReductionModel(term: LambdaRoot, strategy: BetaReductionVisitor,
    level: LevelModel)
+play()
+pause()
+step()
+stepRevert()

-setPaused(paused: boolean);
-setBusy(busy: boolean);

+getLevel(): LevelModel</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>390</y>
      <w>440</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;170.0;420.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>880</x>
      <y>380</y>
      <w>320</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>assert(paused &amp;&amp; !pauseRequested &amp;&amp; !busy);
setPaused(false);
step();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>580</y>
      <w>440</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;420.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>880</x>
      <y>510</y>
      <w>590</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>assert(!busy &amp;&amp; !pauseRequested);
 // start in new thread
setBusy(true);
do {
    history.push((LambdaRoot) current.accept(new CopyVisitor()));
    BetaReductionVisitor visitor = new BetaReductionVisitor(strategy);
    current.accept(visitor); 
    step++;
    if (!visitor.hasReduced()) {
        notify((observer) -&gt; observer.reductionFinished(current.equals(level.getLevelTarget())));
    }
} while (!pauseRequested);
setBusy(false);
setPaused(true);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>510</x>
      <y>600</y>
      <w>390</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>880</x>
      <y>760</y>
      <w>340</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>assert(history.size() &gt; 0);
assert(paused);
setBusy(true);
current.setChild(history.pop().getChild());
setBusy(false);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>130</y>
      <w>360</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
ReductionModelObserver
--
--
+pauseChanged(paused: boolean)
+busyChanged(busy: boolean)
+reductionFinished(levelComplete: boolean)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>480</y>
      <w>420</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;100.0;400.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>880</x>
      <y>450</y>
      <w>320</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>assert(!paused);
pauseRequested = true;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>620</x>
      <y>220</y>
      <w>70</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>30.0;10.0;30.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>80</x>
      <y>390</y>
      <w>350</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-
&lt;&lt;bind&gt;&gt;
Observer -&gt; ReductionModelObserver</panel_attributes>
    <additional_attributes>330.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLInterface</id>
    <coordinates>
      <x>0</x>
      <y>390</y>
      <w>160</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Observable&lt;Observer&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>630</y>
      <w>290</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>lt=()-</panel_attributes>
    <additional_attributes>10.0;10.0;270.0;240.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>880</x>
      <y>860</y>
      <w>430</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>if (this.paused != paused) {
    this.paused = paused;
    notify((observer) -&gt; observer.pauseChanged(paused));
}</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
